name: Telegram Realease

on:
  workflow_run:
    workflows: [ Test ]
    types: [ completed ]

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env: 
      LINUX_RELEASE: Linuxtest.txt
      WINDOWS_RELEASE: Windowstest.txt

    steps:
      - name: Download artifacts
        id: get_artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "${{ LINUX_RELEASE }} || artifact.name == "${{ WINDOWS_RELEASE }}"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/build.zip`, Buffer.from(download.data));
            echo "artifact=${matchArtifact.name}" >> $GITHUB_OUTPUT
      
      - name: 'Unzip artifact'
        run: unzip build.zip

      - name: Upload Build File To Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          document: steps.get_artifact.outputs.artifact